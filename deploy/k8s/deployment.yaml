apiVersion: apps/v1
kind: Deployment
metadata:
  name: dice-app
  namespace: dice
spec:
  replicas: 1
  selector:
    matchLabels: { app: dice }
  template:
    metadata:
      labels: { app: dice }
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 10001
        runAsGroup: 10001
        fsGroup: 10001
      volumes:
        - name: log-volume
          emptyDir: {}
      containers:
        - name: app
          image: dice-app:latest
          imagePullPolicy: Never
          env:
            - name: READY
              value: "true"
            - name: LOG_PATH
              value: /var/log/app/dice.log
            - name: PORT
              value: "8080"
          ports:
            - containerPort: 8080
          volumeMounts:
            - name: log-volume
              mountPath: /var/log/app
          readinessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 3
            periodSeconds: 5
            timeoutSeconds: 2
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 2
            failureThreshold: 3
          resources:
            requests: { cpu: "50m", memory: "64Mi" }
            limits:   { cpu: "200m", memory: "128Mi" }
        - name: log-streamer
          image: busybox:1.36
          command: [ "sh", "-c", "touch /var/log/app/dice.log; tail -n+1 -F /var/log/app/dice.log" ]
          volumeMounts:
            - name: log-volume
              mountPath: /var/log/app
          resources:
            requests: { cpu: "10m", memory: "16Mi" }
            limits:   { cpu: "50m", memory: "32Mi" }